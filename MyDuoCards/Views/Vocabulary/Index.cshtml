@using MyDuoCards.Helpers
@model IEnumerable<MyDuoCards.Models.DBModels.RuWord>

@{
	ViewData["Title"] = "Vocabulary";
}

<h1>Vocabulary Bank</h1>

<form asp-controller="Vocabulary" asp-action="Index" method="get">
	<p class="d-flex" style="width: 600px">
		<input class="form-control me-sm-2" type="text" name="searchString" value="@ViewData["searchString"]"/>
		@* <input class="form-control me-sm-2" type="number" name="page" value="@ViewData["page"]"/> *@
		<input class="btn btn-secondary my-2 my-sm-0" type="submit" value="Filter" />
	</p>
</form>

<div class="d-flex flex-wrap">
	@foreach (var item in Model)
	{
		@Html.CardView(
			item.EnWord,
			User.Identity.Name,
			x => Url.Action("AddTheDictionary", "Vocabulary", new { id = x }),
			x => Url.Action("RemoveDictionary", "Vocabulary", new { id = x })
		)
	}
</div>

<div class="d-flex" style="margin-top: 20px">
	@{
		var absoluteUri = Context.Request.Scheme + "://" + Context.Request.Host + Context.Request.Path;
	}

	@if (ViewData["list"] != null)
	{
		@foreach (var index in (List<int>)ViewData["list"]!)
		{
			@Html.ButtonView(absoluteUri, index, (int)@ViewData["page"], ViewData["searchString"]?.ToString());
		}
	}
	else
	{
		<h1>We have not cards which contain this substring</h1>
	}
</div>

